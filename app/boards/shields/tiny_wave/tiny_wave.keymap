#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define M3      1
#define M4L     2
#define M4R     3
#define ADJST   4

#define MEH LS(LA(LCTL))

/ {
    combos {
        compatible = "zmk,combos";
        combo_toggle_adjst_l {
            timeout-ms = <50>;
            key-positions = <13 14 15 16>;
            bindings = <&tog ADJST>;
        };
        combo_toggle_adjst_r {
            timeout-ms = <50>;
            key-positions = <19 20 21 22>;
            bindings = <&tog ADJST>;
        };
    };
    behaviors {
        lhr: left_hand_positional_hold_tap_super {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP_SUPER";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;                        // <---[[produces hold if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 6 7 8 9 10 11 18 19 20 21 22 23 29 30 31 32 33 37 38 39>;    // <---[[right-hand keys]]
        };
        rhr: right_hand_positional_hold_tap_super {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP_SUPER";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;                        // <---[[produces hold if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 34 35 36>;    // <---[[left-hand keys]]
        };
	qlt: quick_tap_enabled_layer_tap {
	    compatible = "zmk,behavior-hold-tap";
	    label = "QUICK_LAYER_TAP";
	    #binding-cells = <2>;
	    flavor = "tap-preferred";
	    tapping-term-ms = <300>;
	    quick-tap-ms = <200>;
	    bindings = <&mo>, <&kp>;
	};
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LCTL   &kp X        &kp V        &kp L          &kp C          &kp W             &kp K         &kp H          &kp G        &kp F        &kp Q        &kp RALT
&kp LSHIFT &lhr LGUI  U &lhr LALT I  &lhr LCTL A    &lhr LSHIFT E  &kp O             &kp S         &rhr LSHIFT N  &rhr LCTL R  &rhr LALT T  &rhr LGUI D  &kp DEL
           &kp FSLH     &kp  LBKT    &kp Y          &kp P          &kp Z             &kp B         &kp M          &kp COMMA    &kp DOT      &kp J
                                   &qlt M3 RET    &qlt M4R BSPC   &lhr MEH ESC     &rhr MEH TAB  &qlt M4L SPC   &qlt M3 COLON
            >;
        };

        m3_layer {
            bindings = <
&none  &none     &kp UNDER  &kp LBKT  &kp RBKT   &kp CARET      &kp EXCL   &kp LT     &kp GT    &kp EQUAL  &kp AMPS   &none
&none  &kp BSLH  &kp FSLH   &kp LBRC  &kp RBRC   &kp STAR       &kp QMARK  &kp LPAR   &kp RPAR  &kp MINUS  &kp COLON  &kp AT
       &kp HASH  &kp DLLR   &kp PIPE  &kp TILDE  &kp GRAVE      &kp PLUS   &kp PRCNT  &kp DQT   &kp SQT    &kp SEMI
                            &trans    &trans     &trans         &trans     &trans     &trans
            >;
        };
        m4l_layer {
            bindings = <
&none            &kp PG_UP       &kp BSPC     &kp UP        &kp DEL       &kp PG_DN   &none  &none         &none      &none      &none      &none
&none            &kp HOME        &kp LEFT     &kp DOWN      &kp RIGHT     &kp END     &none  &kp LSHIFT    &kp LCTL   &kp LALT   &kp LGUI   &none
                 &kp ESC         &kp TAB      &kp INSERT    &kp RET       &none       &none  &none         &none      &none      &none
                                              &trans      &trans          &trans      &trans &trans  &trans
            >;
        };
        m4r_layer {
            bindings = <
&none            &none        &none        &none        &none          &none   &kp EXCL   &kp N7   &kp N8  &kp N9  &kp PLUS    &kp MINUS
&none            &kp LGUI     &kp LALT     &kp LCTL     &kp LSHIFT     &none   &kp QMARK  &kp N4   &kp N5  &kp N6  &kp COMMA   &kp DOT
                 &none        &none        &none        &none          &none   &kp COLON  &kp N1   &kp N2  &kp N3  &kp SEMI
                                           &trans      &trans          &trans  &trans     &kp N0   &trans
            >;
        };
        adjust_layer {
            bindings = <
&reset       &bt BT_SEL 1 &bt BT_PRV    &ext_power EP_ON    &out OUT_BLE    &none   &none  &out OUT_BLE  &ext_power EP_ON   &bt BT_PRV   &bt BT_SEL 1  &reset
&bootloader  &bt BT_SEL 0 &bt BT_NXT    &ext_power EP_OFF   &out OUT_USB    &none   &none  &out OUT_USB  &ext_power EP_OFF  &bt BT_NXT   &bt BT_SEL 0  &bootloader
             &bt BT_SEL 2 &bt BT_CLR    &none               &none           &none   &none  &none         &none              &bt BT_CLR   &bt BT_SEL 2
                                        &none               &none           &none   &none  &none         &none
            >;
        };
    };
};
